Чтобы заменить JavaScript код на TypeScript, сохранив функциональность, вам нужно будет:

1. Установить Node.js и npm.
2. Создать проект и настроить TypeScript.
3. Переписать JavaScript код на TypeScript.

### Установка Node.js и npm

Сначала установите Node.js и npm, если они ещё не установлены. Перейдите на [официальный сайт Node.js](https://nodejs.org/) и скачайте установочный файл. Следуйте инструкциям по установке. 

После установки откройте командную строку (cmd или PowerShell) и проверьте установку, выполнив команды:

```bash
node -v
npm -v
```

### Настройка проекта с TypeScript

1. Создайте новую директорию для проекта и инициализируйте npm:

```bash
mkdir weather-app
cd weather-app
npm init -y
```

2. Установите TypeScript и ts-node:

```bash
npm install typescript ts-node --save-dev
```

3. Создайте файл конфигурации TypeScript `tsconfig.json`:

```json
{
  "compilerOptions": {
    "target": "es5",
    "module": "commonjs",
    "strict": true,
    "esModuleInterop": true,
    "outDir": "./dist",
    "rootDir": "./src"
  },
  "include": ["src/**/*.ts"]
}
```

4. Создайте структуру проекта:

```
weather-app/
├── dist/
├── src/
│   ├── app.ts
├── index.html
├── style.css
├── tsconfig.json
├── package.json
```

### Переписать JavaScript код на TypeScript

#### index.html

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecast</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Прогноз погоды</h1>
    <div id="weather-container"></div>
    <script src="dist/app.js"></script>
</body>
</html>
```

#### style.css

```css
body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
}

h1 {
    margin-bottom: 20px;
}

.weather-card {
    border: 1px solid #ccc;
    border-radius: 10px;
    padding: 10px;
    margin: 10px;
    width: 200px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.weather-card h3 {
    margin: 0 0 10px;
}
```

#### src/app.ts

```typescript
document.addEventListener('DOMContentLoaded', () => {
    const weatherContainer: HTMLElement = document.getElementById('weather-container')!;
    const apiUrl: string = 'https://vm.nathoro.ru/weather?lattitude=54.3&longitude=48.4';

    interface Forecast {
        location: string;
        date: string;
        temperature: number;
        windDirection: string;
        windSpeed: number;
        humidity: number;
    }

    fetch(apiUrl)
        .then(response => response.json())
        .then((data: Forecast[]) => {
            console.log('Полученные данные:', data);
            if (!data || !Array.isArray(data)) {
                throw new Error('Неверный формат данных');
            }

            data.forEach(forecast => {
                // Проверка наличия необходимых данных
                if (!forecast.date || typeof forecast.temperature === 'undefined') {
                    console.error('Некорректные данные прогноза:', forecast);
                    return;
                }

                // Преобразуем дату в удобочитаемый формат
                const date = new Date(forecast.date);
                const dateString = date.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric' });

                // Форматируем температуру
                const temperature = `${forecast.temperature.toFixed(1)}°C`;

                // Форматируем направление и скорость ветра
                const wind = `Ветер: ${forecast.windDirection}, ${forecast.windSpeed.toFixed(1)} м/с`;

                // Форматируем влажность
                const humidity = `Влажность: ${forecast.humidity.toFixed(1)}%`;

                // Создаем карточку прогноза
                const card = document.createElement('div');
                card.className = 'weather-card';

                const dateElement = document.createElement('h3');
                dateElement.textContent = dateString;

                const tempElement = document.createElement('p');
                tempElement.textContent = `Температура: ${temperature}`;

                const windElement = document.createElement('p');
                windElement.textContent = wind;

                const humidityElement = document.createElement('p');
                humidityElement.textContent = humidity;

                card.appendChild(dateElement);
                card.appendChild(tempElement);
                card.appendChild(windElement);
                card.appendChild(humidityElement);

                weatherContainer.appendChild(card);
            });
        })
        .catch(error => console.error('Ошибка при получении данных:', error));
});
```

### Компиляция TypeScript и запуск

1. Скомпилируйте ваш TypeScript код в JavaScript:

```bash
npx tsc
```

2. Откройте `index.html` в вашем браузере, чтобы увидеть результат.

Эти шаги позволят вам заменить JavaScript код на TypeScript, сохраняя функциональность.